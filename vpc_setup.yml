- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
   - name: import varivale
     include_vars: variable/vpc_setup

   - name: careat vpofile vpc
     ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
     register: vpcout

   #- debug:
   #  var: vpcout
   # create public subnet 1
   - name: create public subnet 1
     ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        cidr: "{{PubSub1Cidr}}"
        state: "{{state}}"
        map_public: yes
        tags:
             Name: Pub_Sub_1
     register: Pub_Sub1_out
    
    # create public subnet 2
   - name: create public subnet 2
     ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        cidr: "{{PubSub2Cidr}}"
        state: "{{state}}"
        map_public: yes
        tags:
             Name: Pub_Sub_2
     register: Pub_Sub2_out
    
    # create public subnet 3
   - name: create public subnet 3
     ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        cidr: "{{PubSub3Cidr}}"
        state: "{{state}}"
        map_public: yes
        tags:
             Name: Pub_Sub_3
     register: Pub_Sub3_out

     # create private subnet 1
   - name: create private subnet 1
     ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        cidr: "{{PrivSub1Cidr}}"
        state: "{{state}}"
        tags:
             Name: priv_Sub_1
     register: Priv_Sub1_out

          # create private subnet 2
   - name: create private subnet 2
     ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        cidr: "{{PrivSub2Cidr}}"
        state: "{{state}}"
        tags:
             Name: priv_Sub_2
     register: Priv_Sub2_out

          # create private subnet 3
   - name: create private subnet 3
     ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        cidr: "{{PrivSub3Cidr}}"
        state: "{{state}}"
        tags:
             Name: Priv_Sub_3
     register: Priv_Sub3_out

     # Internet Gateway for Public subnets

   - name: Internet Gateway
     ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        tags:
             Name: IGW_vprofile
     register: IGW_out


     # Create Public Route Table
   - name: route table 
     ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        subnets:
             - "{{ Pub_Sub1_out.subnet.id }}"
             - "{{ Pub_Sub2_out.subnet.id }}"
             - "{{ Pub_Sub3_out.subnet.id }}"
        routes:
             - dest: 0.0.0.0/0
               gateway_id: "{{ IGW_out.gateway_id }}"
        tags:
             Name: Public_Route
     register: public_route_out


     # create NAT GAtwy
   - name: NAT Geteway
     ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{ Pub_Sub1_out.subnet.id }}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: true
     register: NGW_out

     # Create Private Route Table
   - name: Private route table 
     ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        subnets:
             - "{{ Priv_Sub1_out.subnet.id }}"
             - "{{ Priv_Sub2_out.subnet.id }}"
             - "{{ Priv_Sub3_out.subnet.id }}"
        routes:
             - dest: 0.0.0.0/0
               gateway_id: "{{ NGW_out.nat_gateway_id }}"
        tags:
             Name: Private_Route
     register: private_route_out

     # Print All ID's
   - name: print ID's
     debug:
        var: "{{item}}"
     loop:
        - vpcout.vpc.id
        - Pub_Sub1_out.subnet.id
        - Pub_Sub2_out.subnet.id
        - Pub_Sub3_out.subnet.id
        - Priv_Sub1_out.subnet.id
        - Priv_Sub2_out.subnet.id
        - Priv_Sub3_out.subnet.id
        - IGW_out.gateway_id
        - NGW_out.nat_gateway_id
        - public_route_out.route_table.id
        - private_route_out.route_table.id

   - set_fact:
        vpcid: "{{vpcout.vpc.id}}"
        pubsub1id: "{{ Pub_Sub1_out.subnet.id}}"
        pubsub2id: "{{Pub_Sub2_out.subnet.id}}"
        pubsub3id: "{{Pub_Sub3_out.subnet.id}}"
        privsub1id: "{{Priv_Sub1_out.subnet.id}}"
        privsub2id: "{{Priv_Sub2_out.subnet.id}}"
        privsub3id: "{{Priv_Sub3_out.subnet.id}}"
        igwid: "{{IGW_out.gateway_id}}"
        ngwid: "{{NGW_out.nat_gateway_id}}"
        pubrouteid: "{{public_route_out.route_table.id}}"
        privrouteid: "{{private_route_out.route_table.id}}"
        cacheable: yes

        #copy all the variablel of vpc

   - name: copy all the variablel of vpc
     copy:
        content: "vpcid: {{vpcout.vpc.id}\npubsub1id: {{ Pub_Sub1_out.subnet.id}}\npubsub2id: {{Pub_Sub2_out.subnet.id}}}\npubsub3id: {{Pub_Sub3_out.subnet.id}}\nprivsub1id: {{Priv_Sub1_out.subnet.id}}\nprivsub2id: {{Priv_Sub2_out.subnet.id}}\nprivsub3id: {{Priv_Sub3_out.subnet.id}}\nigwid: {{IGW_out.gateway_id}}\nngwid: {{NGW_out.nat_gateway_id}}\npubrouteid: {{public_route_out.route_table.id}}\nprivrouteid: {{private_route_out.route_table.id}}"
        dest: variable/vpc_var

        



          